{
  "uuid": "256918d8-70c9-4e45-ad37-a6cb1a3f39f7",
  "lastMigration": 24,
  "name": "Mockoon bbidentity",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3003,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01",
      "documentation": "API to update existing Open ID Connect (OIDC) client.",
      "method": "put",
      "endpoint": "client-mgmt/oidc-client/:client_id",
      "responses": [
        {
          "uuid": "bf45f01a-d052-430c-8a88-ea4524b29f69",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the client.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "785b806d0e594657b05aabdb30fff8a4",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "87ec1fe5-ec22-4496-b658-ae6b7cd4b964",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"Invalid request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63ace6d0-22ce-463d-bfef-9f910ce813e5",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"client_id does not exist\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid request - client does not not exist.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "785b806d0e594657b05aabdb30fff8a4",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "(active|inactive)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "(mosip:idp:acr:static-code|mosip:idp:acr:generated-code|mosip:idp:acr:linked-wallet|mosip:idp:acr:biometrics)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "(authorization_code)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "(private_key_jwt)",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173",
      "documentation": "The authorize endpoint of Open ID Connect (OIDC)",
      "method": "get",
      "endpoint": "authorize",
      "responses": [
        {
          "uuid": "7fcecddc-a8e7-41f9-b59b-43933a64efaf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully loads JS application, and validates the provided query parameters using oauth-details endpoint",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12e4ba89-6dfb-4c15-a632-9a3158dcfb26",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ec556248-eb9b-49a1-b390-72c1312a94ea",
      "documentation": "API to add new open ID connect (OIDC) clients,",
      "method": "post",
      "endpoint": "client-mgmt/oidc-client",
      "responses": [
        {
          "uuid": "ff7da945-fc07-4fc5-8202-377d4d5a398b",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added new client",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^phone_number$|^picture$|^address$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "468fc7ee-0274-4d38-8972-b54f6f4d74c0",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^phone_number$|^picture$|^address$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2da4686-811c-404e-a0d4-79d25abac2ef",
      "documentation": "OAuth details endpoint validates the provided request parameters and resolves the required authentication factors.",
      "method": "post",
      "endpoint": "authorization/oauth-details",
      "responses": [
        {
          "uuid": "7a0e1913-3545-4ca1-ac94-330810bc19a2",
          "body": "{\n  \"responseTime\": \"2022-09-22T08:03:45.287Z\",\n  \"response\": {\n    \"transactionId\": \"string\",\n    \"authFactors\": [\n      {\n        \"type\": \"PIN\"\n      }\n    ],\n    \"essentialClaims\": [\"all claims\"]\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully validates the provided request parameters and resolves the required authentication factors.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.responseType",
              "value": "code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUri",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "0ca08f0d-1b2f-4f42-bd4e-2829e7827bf8",
          "body": "{\n  \"responseTime\": \"2022-09-22T08:03:45.287Z\",\n  \"response\": null,\n  \"errors\": [\n    { \n      \"errorCode\": \"invalid_body\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request - empty body.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.scope",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.responseType",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.redirectUri",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d847caa4-96ba-4ff9-82b9-78f1880aa103",
          "body": "{\n  \"responseTime\": \"2022-09-22T08:03:45.287Z\",\n  \"response\": null,\n  \"errors\": [\n    { \n      \"errorCode\": \"invalid_scope\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request - invalid scope parameter.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "166d85e5-6d4d-441e-a9c7-6bd52d8f6201",
          "body": "{\n  \"responseTime\": \"2022-09-22T08:03:45.287Z\",\n  \"response\": null,\n  \"errors\": [\n    { \n      \"errorCode\": \"invalid_client_id\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request - invalid clientId parameter.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5a799937-344a-49d2-8000-6c30f38ee3ec",
          "body": "{\n  \"responseTime\": \"2022-09-22T08:03:45.287Z\",\n  \"response\": null,\n  \"errors\": [\n    { \n      \"errorCode\": \"invalid_response_type\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request - invalid responseType parameter.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.responseType",
              "value": "code",
              "invert": true,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "c0a243c5-2421-4e96-bd8e-c587fdda9d27",
          "body": "{\n  \"responseTime\": \"2022-09-22T08:03:45.287Z\",\n  \"response\": null,\n  \"errors\": [\n    { \n      \"errorCode\": \"invalid_redirect_uri\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request - invalid redirectUri parameter.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.redirectUri",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}