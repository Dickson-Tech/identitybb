{
  "uuid": "256918d8-70c9-4e45-ad37-a6cb1a3f39f7",
  "lastMigration": 25,
  "name": "Mockoon bbidentity",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3003,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01",
      "documentation": "API to update existing Open ID Connect (OIDC) client.",
      "method": "put",
      "endpoint": "client-mgmt/oidc-client/:client_id",
      "responses": [
        {
          "uuid": "bf45f01a-d052-430c-8a88-ea4524b29f69",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the client.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "785b806d0e594657b05aabdb30fff8a4",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "87ec1fe5-ec22-4496-b658-ae6b7cd4b964",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"Invalid request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63ace6d0-22ce-463d-bfef-9f910ce813e5",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"client_id does not exist\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid request - client does not not exist.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "785b806d0e594657b05aabdb30fff8a4",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "(active|inactive)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "(mosip:idp:acr:static-code|mosip:idp:acr:generated-code|mosip:idp:acr:linked-wallet|mosip:idp:acr:biometrics)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "(authorization_code)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "(private_key_jwt)",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173",
      "documentation": "The authorize endpoint of Open ID Connect (OIDC)",
      "method": "get",
      "endpoint": "authorize",
      "responses": [
        {
          "uuid": "7fcecddc-a8e7-41f9-b59b-43933a64efaf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully loads JS application, and validates the provided query parameters using oauth-details endpoint",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12e4ba89-6dfb-4c15-a632-9a3158dcfb26",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5ed8ef66-e899-4566-8f51-b34750d12b14",
      "documentation": "API to add new open ID connect (OIDC) clients,",
      "method": "post",
      "endpoint": "client-mgmt/oidc-client",
      "responses": [
        {
          "uuid": "75f6cfa6-b949-4b6b-9648-2580a3dab24a",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added new client",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^phone_number$|^picture$|^address$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "468fc7ee-0274-4d38-8972-b54f6f4d74c0",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^phone_number$|^picture$|^address$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5145302f-f4dc-4353-9d42-8aeffd7c15d5",
      "documentation": "Once the access token is received through the token endpoint, a backend application of a relying party invokes this OIDC-compliant endpoint to request the user's claims. Consenting user claims are returned in the form of a JWT. This JWT is a nested JWT that is signed with JWS and then encrypted with JWE.",
      "method": "get",
      "endpoint": "oidc/userinfo",
      "responses": [
        {
          "uuid": "2476f747-3c9f-4d42-9285-272f265cd6db",
          "body": "eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYifQ.wwHEuE6f-GnApjbmECaK--6CKxLR-Z6qC6OY3E1Bqv9jtcxQUnvU8AdXbrCLvrZjYiphqcDi_cBXlP888lABmPQPlxRCjd03-O3ipKKuhDtQdxYprBhkfrlO7PoA59pbiQVib78X8DwZ1tJHlmtdjyFEWt4QUlX9jJ7pFS_Alz1ULqZ0EVOgDEflm2mggAAzfHCXvdkmaV4uNLWnE80TtohY0DwR3Tk7PUMsCH14sGTmvpibFu0FFLw5FghbpcUK6_qI1PJIPmp5SWZlked7yqJ495FKbVwiCn3AAvFe-V5BiQz6l6A-C7sAhUSCOuZ3_-VFmgSBeN4X_ddXuEHriw._pRSNFngfy36E-P7yPNOOw.YdvocJd5ySz561SiTRGXowesLE8TiihqmcPCfTmxjD_OiNy4E0RiNCpTeWAMdfWQgT9zzb0ABusw0b5FdKrsyRYnRkvDpYWSA6lkhsJjZe_AjlzCh264W8xOHhdHNPA-iIJHDlihfDs4HwzmoeMYIOnk2R6gzlj486A_7wt8-IKfcJJ_gaMcw3U7GjMg454FsxRwRzGTP-pFWoNgJEIG-nKVpBrMqcQ6YLeLpWRnwMW8E5q65VxPKMQ8W_MiSOcAASja8ERWP0m3eusnJULyHcFoE-7BKWJoc74iw4WngSkaUM-XjHNxehf8zgsn2SRmtWSBvYK8qw40ljYMQXw5twNAPEbVR4SyKvZb68wzRhk1NjZkFJjpB_6Wd8gqFyOSOE3RQy8E9YMBHjTfo5Z3F5c5f4yv8yWf0J2V_9IlSq5Gif1tKMGf-JnpffA_51RRXBNKmJBDiNsjaYxoFAXqdK3WWXLcCI2pFNFS5JzZKhJdnOodBROAf0GVDNZ3SJQV8wJjwCcQG9xcBVKw6qtc7g.HiMjVkydBc375QlTWvDtWA",
          "latency": 0,
          "statusCode": 200,
          "label": "Authorized",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "^Bearer(\\s)([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]+)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "026bdda0-80e1-4469-8e5f-7e696c1060c0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "WWW-Authenticate",
              "value": "Bearer error=invalid_token, error_description=MOSIPIDP123: A userinfo request was made with an access token that was not recognized."
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "folders": [],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "5ed8ef66-e899-4566-8f51-b34750d12b14"
    },
    {
      "type": "route",
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01"
    },
    {
      "type": "route",
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173"
    },
    {
      "type": "route",
      "uuid": "5145302f-f4dc-4353-9d42-8aeffd7c15d5"
    }
  ]
}