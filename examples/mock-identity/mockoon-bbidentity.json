{
  "uuid": "256918d8-70c9-4e45-ad37-a6cb1a3f39f7",
  "lastMigration": 27,
  "name": "Mockoon bbidentity",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "routes": [
    {
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01",
      "documentation": "API to update existing Open ID Connect (OIDC) client.",
      "method": "put",
      "endpoint": "client-mgmt/oidc-client/:client_id",
      "responses": [
        {
          "uuid": "bf45f01a-d052-430c-8a88-ea4524b29f69",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the client.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "785b806d0e594657b05aabdb30fff8a4",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "87ec1fe5-ec22-4496-b658-ae6b7cd4b964",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"Invalid request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "63ace6d0-22ce-463d-bfef-9f910ce813e5",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"client_id does not exist\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid request - client does not not exist.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "785b806d0e594657b05aabdb30fff8a4",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "(active|inactive)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "(mosip:idp:acr:static-code|mosip:idp:acr:generated-code|mosip:idp:acr:linked-wallet|mosip:idp:acr:biometrics)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "(authorization_code)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "(private_key_jwt)",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173",
      "documentation": "The authorize endpoint of Open ID Connect (OIDC)",
      "method": "get",
      "endpoint": "authorize",
      "responses": [
        {
          "uuid": "7fcecddc-a8e7-41f9-b59b-43933a64efaf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully loads JS application, and validates the provided query parameters using oauth-details endpoint",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "12e4ba89-6dfb-4c15-a632-9a3158dcfb26",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "b3d913eb-7e0d-42f9-97e2-a9b626e1bd05",
      "documentation": "API to add new open ID connect (OIDC) clients,",
      "method": "post",
      "endpoint": "client-mgmt/oidc-client",
      "responses": [
        {
          "uuid": "763c8c33-f454-4756-be5f-31f2a72c4f32",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added new client",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^phone_number$|^picture$|^address$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "468fc7ee-0274-4d38-8972-b54f6f4d74c0",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request.",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^mosip:idp:acr:static-code$|^mosip:idp:acr:generated-code$|^mosip:idp:acr:linked-wallet$|^mosip:idp:acr:biometrics$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^phone_number$|^picture$|^address$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "d4170fb5-331e-4065-8fc0-5a377bb57307",
      "documentation": "",
      "method": "post",
      "endpoint": "oauth/token",
      "responses": [
        {
          "uuid": "5c2cd23e-bb5e-4d43-9c2d-cf5eaf68fbaa",
          "body": "{\n  \"id_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\n  \"access_token\": \"string.string.string\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 0\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully recieves the ID and access token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cache-Control",
              "value": "no-store"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "grant_type",
              "value": "authorization_code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "code",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_id",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "http://example.com",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "33e4b39e-1394-477e-af92-b787b3398bf4",
          "body": "{\n  \"error\": \"invalid_assertion\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid assertion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7b2c9922-a21c-4c5a-9744-d1cdfbf63bd6",
          "body": "{\n  \"error\": \"invalid_assertion_type\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid assertion type",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "de6728ab-0e67-4747-9974-613bf9c625ad",
          "body": "{\n  \"error\": \"invalid_redirect_uri\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "invalid_redirect_uri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cache-Control",
              "value": "no-store"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "http://example.com",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "b4ed8616-a68a-4559-ae00-67fb92a0157b",
          "body": "{\n  \"error\": \"invalid_payload\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid payload",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "grant_type",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "code",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_id",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "b4c73209-405e-4410-a31f-3ae44d8b8e20",
          "body": "{\n  \"error\": \"invalid_input\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "grant_type",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "code",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_id",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01"
    },
    {
      "type": "route",
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173"
    },
    {
      "type": "route",
      "uuid": "b3d913eb-7e0d-42f9-97e2-a9b626e1bd05"
    },
    {
      "type": "route",
      "uuid": "d4170fb5-331e-4065-8fc0-5a377bb57307"
    }
  ],
  "folders": []
}