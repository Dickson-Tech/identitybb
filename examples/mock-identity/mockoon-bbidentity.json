{
  "uuid": "256918d8-70c9-4e45-ad37-a6cb1a3f39f7",
  "lastMigration": 27,
  "lastMigration": 27,
  "name": "BB-Identity",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "hostname": "",
  "routes": [
    {
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01",
      "documentation": "API to update existing Open ID Connect (OIDC) client.",
      "method": "put",
      "endpoint": "client-mgmt/oidc-client/:client_id",
      "responses": [
        {
          "uuid": "1278a74d-ef8f-4cec-9bf6-04f1cfd7d4f9",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the client",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "params",
              "modifier": "client_id",
              "value": "e-health-service",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "5b5025eb-a4ca-4a4f-b0ee-3b7e866eb071",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_grant_type\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid grantTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "ced4ac69-586c-4de8-9a68-e69bb211cc08",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_auth\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientAuthMethods",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e0c2302f-b052-4d47-bd18-40d5af822ab1",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_claim\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid userClaims",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "704d8a1a-8517-4d16-aa10-13cf76758be3",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_acr\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid authContextRefs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f331b6df-0f53-4dad-931c-cfde3854dea2",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_redirect_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid redirectUri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "6a9cad88-8010-4bc7-95b6-8bfeabc8f4f8",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid logoUri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "86136758-01a8-402f-8897-3d647c305c20",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_name\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "bf45f01a-d052-430c-8a88-ea4524b29f69",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "params",
              "modifier": "client_id",
              "value": "e-health-service",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "params",
              "modifier": "client_id",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173",
      "documentation": "The authorize endpoint of Open ID Connect (OIDC)",
      "method": "get",
      "endpoint": "authorize",
      "responses": [
        {
          "uuid": "7fcecddc-a8e7-41f9-b59b-43933a64efaf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully validates the provided query parameters using oauth-details endpoint",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "scope",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "45bd6c8d-c23c-42dd-9a73-51e98c7d7588",
      "documentation": "API to add new open ID connect (OIDC) clients,",
      "method": "post",
      "endpoint": "client-mgmt/oidc-client",
      "responses": [
        {
          "uuid": "94eea743-3d4c-4561-ab0d-7f7486afa20d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added new client",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^duplicated$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "",
              "invert": true,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "03b23315-afa8-48cc-87a1-6d8630c0cea8",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_public_key\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid publicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "468fc7ee-0274-4d38-8972-b54f6f4d74c0",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "12c0867b-96ff-49e9-a990-a33757dd29d3",
          "body": "{\n  \"responseTime\": \"string\",\n  \"errors\": [\n    {\n      \"errorCode\": \"duplicate_client_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Duplicate clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^duplicated$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "d28c8c16-0ecc-4632-84ad-7c91b157f7b5",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_redirect_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid redirectUris",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "",
              "invert": false,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1ea64ae0-7339-480d-9410-b2d23c05341e",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "5b12b1cf-c4a7-4056-8758-d18165cdcc0d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_name\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "36870a8b-e550-4cc1-9f01-a335a19c79f9",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_rp_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid relyingPartyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "0cd71796-8114-43c7-8434-084f9115a056",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid logoUri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "976858a2-b81b-4b0d-92dc-c6ebc508270f",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_auth\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientAuthMethods",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "1594eecf-78eb-40eb-ab33-8e7e0e2a19cb",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_grant_type\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid grantTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "9d88d26b-4db0-450b-86b8-b6b183f44af3",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_claim\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid userClaims",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "44e3a0d2-dc37-4d97-a8dd-3b996fa3d7e7",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_acr\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid authContextRefs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "7d8f0305-baba-476e-8906-a001b862c0af",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid requestTime",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "fe5ca74b-beea-400b-b9d4-057370aeb705",
      "type": "http",
      "documentation": "Generate Link code",
      "method": "post",
      "endpoint": "linked-authorization/link-code",
      "responses": [
        {
          "uuid": "13129174-8b5a-4d01-8aac-8b1d154c069a",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCode\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate link code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3181a1d5-4546-4546-ac52-3e60a0ca944d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"string\",\n    \"expireDateTime\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction_id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "fe5ca74b-beea-400b-b9d4-057370aeb705",
      "type": "http",
      "documentation": "Generate Link code",
      "method": "post",
      "endpoint": "linked-authorization/link-code",
      "responses": [
        {
          "uuid": "13129174-8b5a-4d01-8aac-8b1d154c069a",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCode\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate link code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "3181a1d5-4546-4546-ac52-3e60a0ca944d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"string\",\n    \"expireDateTime\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction_id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "8f51c09f-816b-4137-a8aa-8e30bd56a2f7",
      "documentation": "Endpoint to fetch all the public keys of the IDBB server. Returns public key set in the JWKS format",
      "method": "get",
      "endpoint": ".well-known/jwks.json",
      "responses": [
        {
          "uuid": "a30c589f-e696-4472-96fa-0050decf17c7",
          "body": "{\n  \"keys\": [\n    {{#repeat 4}}\n    {\n      \"kid\": \"{{faker 'random.alpha' 5}}\",\n      \"use\": \"sig\",\n      \"kty\": \"RSA\",\n      \"e\": \"string\",\n      \"n\": \"string\",\n      \"x5t#S256\": \"string\",\n      \"x5c\": \"string\",\n      \"exp\": \"string\"\n    }\n    {{/repeat}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Retrieved public key set in the JWKS format",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "5674c6e6-5e80-4f0b-9bcb-30416f76d9a7",
      "documentation": "This endpoint is only for facilitating the OIDC provider details in a standard way.",
      "method": "get",
      "endpoint": ".well-known/openid-configuration",
      "responses": [
        {
          "uuid": "ca26fe7c-4914-4670-8881-365692a23410",
          "body": "{\n  \"issuer\": \"string\",\n  \"authorization_endpoint\": \"string\",\n  \"token_endpoint\": \"string\",\n  \"userinfo_endpoint\": \"string\",\n  \"jwks_uri\": \"string\",\n  \"registration_endpoint\": \"string\",\n  \"scopes_supported\": [\n    \"openid\"\n  ],\n  \"response_types_supported\": [\n    \"code\"\n  ],\n  \"acr_values_supported\": [\n    \"string\"\n  ],\n  \"userinfo_signing_alg_values_supported\": [\n    \"string\"\n  ],\n  \"userinfo_encryption_alg_values_supported\": [\n    \"string\"\n  ],\n  \"userinfo_encryption_enc_values_supported\": [\n    \"string\"\n  ],\n  \"token_endpoint_auth_methods_supported\": [\n    \"private_key_jwt\"\n  ],\n  \"display_values_supported\": [\n    \"string\"\n  ],\n  \"claim_types_supported\": [\n    \"normal\"\n  ],\n  \"claims_supported\": [\n    \"string\"\n  ],\n  \"claims_locales_supported\": [\n    \"string\"\n  ],\n  \"ui_locales_supported\": [\n    \"string\"\n  ],\n  \"response_modes_supported\": [\n    \"query\"\n  ],\n  \"token_endpoint_auth_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"RS256\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully faciliated the OIDC provider detais",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "cac1d80a-b7ea-4c5a-bb33-4c7c9e2d16e7",
      "type": "http",
      "documentation": "Checks the status of link code",
      "method": "post",
      "endpoint": "linked-authorization/link-status",
      "responses": [
        {
          "uuid": "e5e585c3-d25b-468e-9353-558e93b2567f",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully checks the status of link code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "ad887cb0-8f86-414f-b6cf-1c0aa79f8673",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transactionId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e002bcb5-f015-4b12-ac5c-84031e48b9f0",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkCode",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "folders": [],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "45bd6c8d-c23c-42dd-9a73-51e98c7d7588"
    },
    {
      "type": "route",
      "uuid": "91963d01-81ab-4fdd-8b43-9a08652e6173"
    },
    {
      "type": "route",
      "uuid": "f90e90b4-866f-478f-b34c-a358d8196f01"
    },
    {
      "type": "route",
      "uuid": "8f51c09f-816b-4137-a8aa-8e30bd56a2f7"
    },
    {
      "type": "route",
      "uuid": "cac1d80a-b7ea-4c5a-bb33-4c7c9e2d16e7"
    }
  ]
}
